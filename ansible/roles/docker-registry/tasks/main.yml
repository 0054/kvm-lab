---
- name: Install required system packages
  yum:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
      - PyYAML
      - epel-release
    state: present

- name: Install python-pip
  yum:
    name: 
      - python2-pip

- name: pip install python-compose
  pip:
    name: 
      - docker-compose
      - docker

- name: Add Docker repo
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docer-ce.repo

- name: Install Docker
  yum:
    name:
      - docker-ce 
      - docker-ce-cli
      - containerd.io
    state: present

- name: Start and enable docker-service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: create volumes
  file:
    path: '{{ item }}'
    state: directory
    mode: '0766'
  with_items:
    - /registry/data
    - /registry/auth

- name: copy htpasswd
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: root
    group: root
    mode: 0777
  with_items:
    - { src: 'htpasswd', dest: '/registry/auth/htpasswd' }
    - { src: 'domain.crt', dest: '/registry/auth/domain.crt' }
    - { src: 'domain.key', dest: '/registry/auth/domain.key' }
    - { src: 'nginx.conf', dest: '/registry/auth/nginx.conf' }
    - { src: 'docker-compose.yml', dest: '/registry/docker-compose.yml' }

- name: Install Docker Compose (if configured).
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
    dest: "{{ docker_compose_path }}"
    mode: 0755

- name: Docker Compose up
  docker_compose:
    project_src: /registry

# - name: Run Docker Registry Server
#   docker_container:
#     name: registry
#     image: registry:2
#     published_ports: 5000:5000
#     env:
#       REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt
#       REGISTRY_HTTP_TLS_KEY: /certs/registry.key
#       REGISTRY_AUTH: htpasswd
#       REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
#       REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
#     volumes:
#       - /registry/data:/var/lib/registry
#       - /registry/certs:/certs
#       - /registry/auth:/auth
#     restart_policy: always
#     state: started

